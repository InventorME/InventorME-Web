[{"/Users/lukemiller/Developer/Capstone/inventor-me/src/index.js":"1","/Users/lukemiller/Developer/Capstone/inventor-me/src/App.js":"2","/Users/lukemiller/Developer/Capstone/inventor-me/src/reportWebVitals.js":"3","/Users/lukemiller/Developer/Capstone/inventor-me/src/signinPage/SignInPage.js":"4","/Users/lukemiller/Developer/Capstone/inventor-me/src/accountsPage/AccountsPage.js":"5","/Users/lukemiller/Developer/Capstone/inventor-me/src/createacctPage/CreateAcctPage.js":"6","/Users/lukemiller/Developer/Capstone/inventor-me/src/aboutPage/AboutPage.js":"7","/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/profilePage/ProfilePage.js":"8","/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/NavBanner.js":"9","/Users/lukemiller/Developer/Capstone/inventor-me/src/util/Accounts.js":"10","/Users/lukemiller/Developer/Capstone/inventor-me/src/util/UserPool.js":"11"},{"size":1289,"mtime":1615750231370,"results":"12","hashOfConfig":"13"},{"size":1045,"mtime":1615753344812,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1615741921795,"results":"15","hashOfConfig":"13"},{"size":3328,"mtime":1615777344202,"results":"16","hashOfConfig":"13"},{"size":1362,"mtime":1615741921788,"results":"17","hashOfConfig":"13"},{"size":5600,"mtime":1615752353330,"results":"18","hashOfConfig":"13"},{"size":898,"mtime":1615741921788,"results":"19","hashOfConfig":"13"},{"size":8708,"mtime":1615741921795,"results":"20","hashOfConfig":"13"},{"size":4816,"mtime":1615777009478,"results":"21","hashOfConfig":"13"},{"size":3043,"mtime":1615750402678,"results":"22","hashOfConfig":"13"},{"size":209,"mtime":1615744036983,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8nbxrd",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/lukemiller/Developer/Capstone/inventor-me/src/index.js",[],["49","50"],"/Users/lukemiller/Developer/Capstone/inventor-me/src/App.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/reportWebVitals.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/signinPage/SignInPage.js",["51","52","53","54"],"/Users/lukemiller/Developer/Capstone/inventor-me/src/accountsPage/AccountsPage.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/createacctPage/CreateAcctPage.js",["55","56","57","58"],"import React, { Component } from 'react';\nimport './CreateAcctPage.css';\nimport InventorLogo from '../images/InventorMeLogo.png';\nimport { BrowserRouter, Route, Switch ,Link} from \"react-router-dom\";\nimport ProfileBox from '../images/profile-box.png';\nimport BackButton from '../images/back-button.png';\nimport UserPool from \"../util/UserPool\";\nimport { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\n\n\nclass CreateAcctPage extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {response: '', post: '', email: '', password: '', phone_number: '', name: '', family_name: ''}\n    this.setPassword = this.setPassword.bind(this);\n    this.setEmail = this.setEmail.bind(this);\n    this.validateUser = this.validateUser.bind(this);\n    this.submit = this.submit.bind(this);\n    this.setPhone = this.setPhone.bind(this);\n    this.setName = this.setName.bind(this);\n    this.setFamilyName = this.setFamilyName.bind(this);\n  \n  }\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n  \n  callApi = async () => {\n    const response = await fetch('/api/user');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n  setEmail(event){\n    this.setState({ email: event.target.value});\n    event.preventDefault();\n  }\n  setPassword(event){\n    this.setState({ password: event.target.value});\n    event.preventDefault();\n  }\n  setName(event){\n    this.setState({ name: event.target.value});\n    event.preventDefault();\n  }\n  setFamilyName(event){\n    this.setState({ family_name: event.target.value});\n    event.preventDefault();\n  }\n  setPhone(event){\n    this.setState({ phone_number: event.target.value});\n    event.preventDefault();\n  }\n\n  submit(event){\n    const attributeList = [];\n    attributeList.push(new CognitoUserAttribute({\n      Name: 'name',\n      Value: this.state.name\n    }));\n    attributeList.push(new CognitoUserAttribute({\n      Name: 'phone_number',\n      Value: this.state.phone_number\n    }));\n    attributeList.push(new CognitoUserAttribute({\n      Name: 'family_name',\n      Value: this.state.family_name\n    }));\n\n    UserPool.signUp(this.state.email, this.state.password, attributeList, null, (err, data) => {\n      if (err){\n        console.error(err);\n      } \n      //If no errors new user is created here\n      else{\n        window.location.href=\"/accounts-page\";\n        console.log(data);\n      }\n      \n    });\n\n  }\n  upperCheck(str){\n    if(str.toLowerCase() === str){\n      return false;\n    }\n    return true;\n  }\n  lowerCheck(str){\n    if(str.toUpperCase() === str){\n      return false;\n    }\n    return true;\n  }\n  alphCheck(str){\n    var regex = /[a-zA-Z]/g;\n    return regex.test(str);\n  }\n  numCheck(str){\n    var regex = /\\d/g;\n    return regex.test(str);\n  }\n  phoneCheck(num){\n    //insert phone number checking here\n    var regex = /^(\\+1\\d{3}\\d{3}\\d{4}$)/g\n    return regex.test(num);\n  }\n  emailCheck(str){\n    var regex = /^[a-zA-Z]+[0-9_.+-]*@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/g\n    return regex.test(str);\n  }\n  \n\n\n  validateUser(){\n    if(this.state.name === \"\"){\n      alert(\"Create Account Error: Please Type First Name\");\n    }else if(this.state.family_name === \"\"){\n      alert(\"Create Account Error: Please Type Last Name\");\n    }else if(this.state.password.length<8){\n      alert(\"Create Account Error: Password Must Be At Least 8 Characters Long\");\n    }else if(!this.alphCheck(this.state.password)){\n      alert(\"Create Account Error: Password Must Contain Letter\");\n    }else if(!this.upperCheck(this.state.password)){\n      alert(\"Create Account Error: Password Must Contain One Upper-Case Letter\");\n    }else if(!this.lowerCheck(this.state.password)){\n      alert(\"Create Account Error: Password Must Contain One Lower-Case Letter\");\n    }else if(!this.numCheck(this.state.password)){\n      alert(\"Create Account Error: Password Must Contain One Number\");\n    }else if(!this.phoneCheck(this.state.phone_number)){\n      alert(\"Create Account Error: Phone Number Must Be At Least 9 Numbers Long\");\n    }else if(!this.emailCheck(this.state.email)){\n      alert(\"Create Account Error: Email must be in the correct format 'Example@Example.Example'\");\n    }\n    else{\n      this.submit();\n    }\n\n  };\n\n    render(){\n    return (\n      <div class=\"createacct-title\">\n\n      <div class=\"createacct-inventor-title\">\n      <h2>InventorME</h2>\n      </div>\n\n      <Link to=\"/signin-page\" style={{ textDecoration: 'none' }}>\n          <img src={BackButton} class=\"backwards\" alt=\"back\" />\n        </Link> \n\n    <p class =\"Email2\"> Email: </p>\n    <input type=\"text\"  input class = \"email2\" value={this.state.email} onChange={this.setEmail}/>\n\n    <p class = \"Fname\"> First Name: </p>\n    <input type=\"text\"  input class = \"first\" value={this.state.name} onChange={this.setName}/>\n\n    <p class = \"Lname\"> Last Name: </p>\n    <input type=\"text\"  input class = \"last\" value={this.state.family_name} onChange={this.setFamilyName}/>\n\n    <p class = \"Phone\"> Phone Number: </p>\n    <input type = \"text\" input class = \"phone\" value={this.state.phone_number} onChange={this.setPhone}/>\n\n    <p class = \"Password2\"> Password: </p>\n    <input type=\"password\"  input class = \"password2\" value={this.state.password} onChange={this.setPassword}/>\n\n    <button class=\"goto-account\" onClick={this.validateUser}>Create Account </button>\n    <img src={InventorLogo} class=\"calogo\" alt=\"\" />\n\n</div>\n      \n      \n      \n      \n\n  \n        \n    \n      );\n    }\n}\nexport default CreateAcctPage;","/Users/lukemiller/Developer/Capstone/inventor-me/src/aboutPage/AboutPage.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/profilePage/ProfilePage.js",["59"],"import React, { Component } from 'react';\nimport './ProfilePage.css';\nimport { Link } from \"react-router-dom\";\nimport BackButton from '../../images/back-button.png'\nimport ReactRoundedImage from \"react-rounded-image\"\nimport UploadButton from '../../images/upload-button.png'\nimport Input, { isPossiblePhoneNumber } from 'react-phone-number-input/input'\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { response: '', disabled: false, loading: false, toastMessage: '', profile: true,\n      userID: null,\n      firstName: '',\n      lastName: '',\n      userEmail: '',\n      userProfilePic: '',\n      userPhone: '',\n      toastStyle : {\n        width: '0%',\n        height: '12%'\n    }\n    }\n    this.toggleForm = this.toggleForm.bind(this);\n    this.saveProfile = this.saveProfile.bind(this);\n    this.hiddenFileInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.getProfile()\n      .then(res => { \n        let formatPhone = \"+\" + res.userPhone;\n        this.setState({ response: res })\n        this.setState({ firstName: res.userFirstName })\n        this.setState({ lastName: res.userLastName })\n        this.setState({ userEmail: res.userEmail })\n        this.setState({ userPhone: formatPhone })\n        this.setState({ userProfilePic: res.userProfilePicURL })\n      })\n      .catch(err => console.log(err));\n  }\n  \n  getProfile = async () => {\n    const response = await fetch('/api/user');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n\n  formatPhoneNumber(phoneNumberString) {\n    var cleaned = ('' + phoneNumberString).replace(/\\D/g, '')\n    var match = cleaned.match(/^(1|)?(\\d{3})(\\d{3})(\\d{4})$/)\n    if (match) {\n      var intlCode = (match[1] ? '+1 ' : '')\n      return [intlCode, '(', match[2], ') ', match[3], '-', match[4]].join('')\n    }\n    return null\n  }\n\n  toggleForm() {\n    this.setState({ profile: !this.state.profile });\n  }\n\n  firstNameOnChange = (event) => {\n    this.setState({firstName: event.target.value});\n  }\n\n  lastNameOnChange = (event) => {\n    this.setState({lastName: event.target.value});\n  }\n\n  emailOnChange = (event) => {\n    this.setState({userEmail: event.target.value});\n  }\n\n  phoneOnChange = (event) => {\n    this.setState({userPhone: event});\n  }\n\n  onImageChange = async(event) => {\n    if (event.target.files && event.target.files[0]) { \n      this.setState({userProfilePic: URL.createObjectURL(event.target.files[0])});    \n    }\n  }\n\n  // resizeFile = (file) => new Promise(resolve => {\n  //   Resizer.imageFileResizer(file, 170, 160, 'PNG', 100, 0,\n  //   uri => {\n  //     resolve(uri); //Set uri state\n  //   },\n  //   'base64'\n  //   );\n  // });\n\n  setToastStyle(style) {\n    this.setState({ toastStyle: style });\n    clearInterval(this.start);\n  }\n\n  closeToast = () => {\n    this.start = setInterval(() => {\n      const toastStyle = { width : '0%', height: '12%' };\n      this.setToastStyle(toastStyle);\n    }, 3000); \n  }\n\n  reloadPage = () => {\n    setInterval(() => {\n      window.location.reload(true)\n    }, 2000); \n  }\n\n  saveProfile=(event) => {\n    if(!isPossiblePhoneNumber(this.state.userPhone)){   \n      event.preventDefault();\n      const toastStyle = { width : '17%', height: '12%' };\n      this.setState({ toastStyle, toastMessage: 'Error: Failed to save ☹' });\n      this.closeToast();\n    } else {\n      const reqBody = {\n        userID: this.state.userID,\n        userFirstName: this.state.firstName,\n        userLastName: this.state.lastName,\n        userEmail: this.state.userEmail,\n        userPhone: this.state.userPhone,\n        userProfilePicURL: this.state.userProfilePic\n      };\n      event.preventDefault();\n      const toastStyle = { width : '17%', height: '12%' };\n      this.setState({ toastStyle, loading: true, disabled: true, toastMessage: 'Saved Successfully! ㋡' });\n      this.reloadPage();\n    }\n  }\n  \n  handleClick = () => {\n    this.hiddenFileInput.current.click();\n  };\n\nrender() {\n    return (\n    <div className=\"profile-container\">\n      { this.state.loading ?\n      <div class=\"load-container\"> <div class=\"load-symbol\"/></div>\n      : null }\n      <div class=\"profile-banner\">\n        <Link to=\"/accounts-page\" style={{ textDecoration: 'none' }}>\n          <img src={BackButton} class=\"profile-back\" alt=\"back\" />\n        </Link> \n        <h2>InventorME</h2>   \n      </div>\n      <div class=\"toast\" style={this.state.toastStyle}>\n        <p class=\"toast-message\">{this.state.toastMessage}</p>\n      </div>\n        { this.state.profile ?\n          <div>\n            <div style={{display: 'block', width: '100%', height: '20%'}}>\n              <div class=\"profile-image-container\">\n               <ReactRoundedImage \n               roundedColor=\"#66A5CC\"\n               imageWidth=\"170\"\n               imageHeight=\"160\"\n               roundedSize=\"1\"\n               image={this.state.userProfilePic} />\n              </div>\n              <h1 class=\"profile-name\">{this.state.response.userFirstName} {this.state.response.userLastName}</h1>\n            </div>\n            \n            <div style={{display: 'inline-flex', width: '100%', height: '25%'}}>\n               <div class =\"edit-email-input\">\n                <h3 class =\"edit-email\"> Email: </h3>\n                <p class=\"user-email-value\">{this.state.response.userEmail}</p>\n               </div>\n               <div class = \"edit-phone-input\">\n                <h3 class = \"edit-phone\"> Phone Number: </h3>\n                <p class=\"phone-number-value\">{this.formatPhoneNumber(this.state.userPhone)}</p>\n               </div>\n            </div>\n\n            <div style={{display: 'inline-flex', width: '100%', height: '25%'}} class=\"info-container\">  \n              <div style={{display: 'inline-flex', width: '29%'}}>\n              <h2 class=\"creation\">Creation Date: </h2>\n              <p class=\"creation-date\">{this.state.response.userCreateDate}</p>\n              </div>\n              <h2 class=\"user-id\">UserID: </h2>\n              <p class=\"creation-date\">{this.state.response.userID}</p>\n            </div>\n             <button class=\"update-profile\" onClick={() => this.toggleForm()}>UPDATE PROFILE</button>\n           </div>\n          : \n        <form style={{height: '100vh'}}>\n           <div style={{display: 'inline-flex', width: '100%', height: '20%'}}>\n            <div class=\"profile-image-container\">\n             <input disabled={this.state.disabled} type=\"file\" ref={this.hiddenFileInput} onChange={this.onImageChange} style={{display: 'none'}}/>\n               <ReactRoundedImage \n               roundedColor=\"#66A5CC\"\n               imageWidth=\"170\"\n               imageHeight=\"160\"\n               roundedSize=\"1\"\n               image={this.state.userProfilePic} />\n             <img onClick={this.handleClick} src={UploadButton} className=\"file-upload\" alt=\"\"/>\n            </div>\n           </div>\n\n           <div style={{display: 'inline-flex', width: '100%', height: '20%'}}>\n            <div class=\"edit-first-input\">\n            <p class=\"edit-first\"> First Name: </p>\n            <input disabled={this.state.disabled} class=\"first-input\" type=\"text\" onChange={this.firstNameOnChange} value={this.state.firstName} />\n            </div>\n            <div class=\"edit-last-input\">\n            <p class=\"edit-last\"> Last Name: </p>  \n            <input disabled={this.state.disabled} type=\"text\" class=\"last-input\" value={this.state.lastName} onChange={this.lastNameOnChange}/>\n            </div>\n           </div>\n          \n           <div style={{display: 'inline-flex', width: '100%', height: '25%'}}>\n            <div class =\"edit-email-input\">\n              <p class =\"edit-email\"> Email: </p>\n              <input disabled={this.state.disabled} type=\"text\" value={this.state.userEmail} class=\"email-input\" onChange={this.emailOnChange}/>\n            </div>\n            <div class = \"edit-phone-input\">\n            <p class = \"edit-phone\"> Phone Number: </p>\n            <Input disabled={this.state.disabled} country=\"US\" class=\"phone-input\"  value={this.state.userPhone} onChange={this.phoneOnChange}/>\n            </div>\n           </div>\n          \n          {/* <p class = \"Password2\"> Password: </p>\n          <input type=\"password\"  input class = \"password2\" onChange={this.handleChange}/> */}\n          <div style={{display: 'inline-flex', width: '100%', height: '5%'}}>\n             <button type='submit' class=\"save-profile\" onClick={this.saveProfile}>SAVE</button>\n             <button class=\"cancel-profile\" onClick={() => window.location.reload(true)}>CANCEL</button>\n          </div>\n        </form> \n          }\n    </div>\n    );\n  }\n}\n\nexport default ProfilePage;","/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/NavBanner.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/util/Accounts.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/util/UserPool.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":14},{"ruleId":"64","severity":1,"message":"68","line":3,"column":16,"nodeType":"66","messageId":"67","endLine":3,"endColumn":26},{"ruleId":"64","severity":1,"message":"69","line":3,"column":28,"nodeType":"66","messageId":"67","endLine":3,"endColumn":38},{"ruleId":"64","severity":1,"message":"70","line":61,"column":31,"nodeType":"66","messageId":"67","endLine":61,"endColumn":41},{"ruleId":"64","severity":1,"message":"71","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":23},{"ruleId":"64","severity":1,"message":"72","line":4,"column":25,"nodeType":"66","messageId":"67","endLine":4,"endColumn":30},{"ruleId":"64","severity":1,"message":"73","line":4,"column":32,"nodeType":"66","messageId":"67","endLine":4,"endColumn":38},{"ruleId":"64","severity":1,"message":"74","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":18},{"ruleId":"64","severity":1,"message":"75","line":120,"column":13,"nodeType":"66","messageId":"67","endLine":120,"endColumn":20},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'withRouter' is defined but never used.","'getSession' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ProfileBox' is defined but never used.","'reqBody' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]