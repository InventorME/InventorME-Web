[{"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\index.js":"1","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\App.js":"2","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\reportWebVitals.js":"3","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\createacctPage\\CreateAcctPage.js":"4","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\signinPage\\SignInPage.js":"5","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\profilePage\\ProfilePage.js":"6","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\aboutPage\\AboutPage.js":"7","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\itemsPage\\ItemsPage.js":"8","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\folderPage\\FolderPage.js":"9","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\statsPage\\StatsPage.js":"10","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\archivepage\\ArchivePage.js":"11","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\searchPage\\searchPage.js":"12","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\collections\\Collections.js":"13","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\NavBanner.js":"14","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\Table.js":"15","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\StatsTable.js":"16","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\toastMessage\\ToastMessage.js":"17","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\Photos.js":"18","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\Database.js":"19","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\collections\\CollectionPage.js":"20","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\itemDetailsView\\itemDetailsView.js":"21","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\objectColors.js":"22","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\formPage\\FormPage.js":"23"},{"size":2191,"mtime":1618684117060,"results":"24","hashOfConfig":"25"},{"size":244,"mtime":1618337298749,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1612304423312,"results":"27","hashOfConfig":"25"},{"size":6421,"mtime":1618337298757,"results":"28","hashOfConfig":"25"},{"size":3237,"mtime":1618337298779,"results":"29","hashOfConfig":"25"},{"size":13715,"mtime":1618684117076,"results":"30","hashOfConfig":"25"},{"size":793,"mtime":1616796138340,"results":"31","hashOfConfig":"25"},{"size":3273,"mtime":1618528764504,"results":"32","hashOfConfig":"25"},{"size":4202,"mtime":1618337298772,"results":"33","hashOfConfig":"25"},{"size":534,"mtime":1618337298776,"results":"34","hashOfConfig":"25"},{"size":504,"mtime":1618337298767,"results":"35","hashOfConfig":"25"},{"size":5268,"mtime":1618337298754,"results":"36","hashOfConfig":"25"},{"size":4621,"mtime":1618684516972,"results":"37","hashOfConfig":"25"},{"size":7261,"mtime":1618684117068,"results":"38","hashOfConfig":"25"},{"size":3189,"mtime":1618337298765,"results":"39","hashOfConfig":"25"},{"size":12867,"mtime":1618337298763,"results":"40","hashOfConfig":"25"},{"size":979,"mtime":1616796138337,"results":"41","hashOfConfig":"25"},{"size":2476,"mtime":1618528764504,"results":"42","hashOfConfig":"25"},{"size":6632,"mtime":1618685407218,"results":"43","hashOfConfig":"25"},{"size":3052,"mtime":1618684516969,"results":"44","hashOfConfig":"25"},{"size":17100,"mtime":1618684516965,"results":"45","hashOfConfig":"25"},{"size":717,"mtime":1618337298782,"results":"46","hashOfConfig":"25"},{"size":19375,"mtime":1618684516963,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"ltdj4q",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\index.js",[],["97","98"],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\App.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\reportWebVitals.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\createacctPage\\CreateAcctPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\signinPage\\SignInPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\profilePage\\ProfilePage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\aboutPage\\AboutPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\itemsPage\\ItemsPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\folderPage\\FolderPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\statsPage\\StatsPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\archivepage\\ArchivePage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\searchPage\\searchPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\collections\\Collections.js",["99","100"],"import React, { Component } from 'react';\r\nimport './Collections.css';\r\n\r\nimport NavBanner from '../NavBanner.js';\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport { Database } from '../../util/Database';\r\nimport { colors } from '../../util/objectColors';\r\nimport FormPage from '../../components/formPage/FormPage';\r\nimport { Auth } from 'aws-amplify';\r\nimport arrow from '../../images/arrow.png'\r\nimport CollectionPage from './CollectionPage.js';\r\nimport BackButton from '../../images/back-button.png'\r\n\r\nvar color=0;\r\n\r\nclass Collections extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        items: [], \r\n        editItem: false, \r\n        item: null,\r\n        showItemMenu: false,\r\n        collection: '',\r\n        toggledetails: false,\r\n        userEmail: '', loading: false\r\n    }\r\n    this.toggleTableView = this.toggleTableView.bind(this);\r\n    this.closeItemMenu = this.closeItemMenu.bind(this);\r\n    this.scrollRef = React.createRef();\r\n  }\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n    this.getItems();\r\n    try{\r\n      const data = await Auth.currentUserInfo();\r\n      this.setState({userEmail: data.attributes.email })\r\n      this.setState({ loading: false });\r\n    }  \r\n    catch (error) {\r\n      console.log('could not find user :(', error);\r\n      window.location.href=\"/signin-page\";\r\n    }\r\n  }\r\n\r\n  filterItemByID(ID, collectionName) {\r\n        this.setState({ item: this.state.items[collectionName].filter(item => item.itemID === ID), editItem: true });\r\n  }\r\n//------------------------------------\r\n  toggleTableView(prop) {\r\n    this.setState({ toggledetails: !this.state.toggledetails,collection:prop });\r\n    this.scrollRef.current.scrollIntoView()\r\n  }\r\n\r\n\r\n\r\n//----------------------------------------------\r\n  closeItemMenu() {\r\n    this.setState({ showItemMenu: false });\r\n  }\r\n\r\n  openItemMenu(prop) {\r\n    this.setState({ showItemMenu: true, collection: prop });\r\n  }\r\n\r\n  getItems = async () => {\r\n    const db = new Database();\r\n    try {\r\n        const body = await db.get();\r\n        \r\n        let collectionItems = [];\r\n        if (body.items.length > 0)\r\n        collectionItems = body.items.filter(item => item.Collections !== null)\r\n        collectionItems = collectionItems.filter(item => item.itemArchived === 0)\r\n\r\n        var groupBy = function (xs, key) {\r\n            return xs.reduce(function (rv, x) {\r\n                (rv[x[key]] = rv[x[key]] || []).push(x);\r\n                return rv;\r\n            }, {});\r\n        };\r\n\r\n        var groubedByTeam = groupBy(collectionItems , 'itemCategory')\r\n        this.setState({ items: groubedByTeam })\r\n        this.setState({ collectionTittle: Object.keys(groubedByTeam) })\r\n        \r\n        this.render();\r\n        this.setState({ loading: false });\r\n    }\r\n    catch (error) {\r\n        console.log('Error pulling data', error);\r\n    }\r\n  }\r\n\r\n\r\n// this is where the boxes are created, we want to put the arrow button in the bottom left corner\r\n  renderFolders = (props) =>{\r\n    return(\r\n      <div className='area' style={{backgroundColor:props.color}}>\r\n            <AiOutlinePlusCircle onClick={() => this.openItemMenu(props.tittle)} className={'icon'}/>\r\n            <img className=\"c_arrow\" src={arrow} onClick={() =>  this.toggleTableView(props.tittle)}/>\r\n            <div className='textTittle'>{props.tittle}</div>\r\n            <div className='textAmount'>{props.amount}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getColors(){\r\n    color++;\r\n    return colors.object[color%8];\r\n  }\r\n\r\n  render() {\r\n      return (\r\n      <div className='container' ref={this.scrollRef}>\r\n        <NavBanner/>\r\n        { this.state.loading ?\r\n        <div className=\"loading-container\"> <div className=\"form-load-symbol\"/></div>: null }\r\n        { this.state.showItemMenu ?\r\n            <div style={{marginTop: '3%'}}><FormPage toggleItemMenu = {this.closeItemMenu} userEmail={this.state.userEmail} collection={this.state.collection} addCollection = {true}/></div> : null }\r\n        {this.state.toggledetails ?\r\n        \r\n        <div> <CollectionPage name = {this.state.collection}/> <img className=\"backer\" src={BackButton} onClick={event => window.location.href = '/collections'}/></div>:\r\n      \r\n        <div className='container2'>\r\n            {this.state.collectionTittle ? this.state.collectionTittle.map((collTittle) => (\r\n              <this.renderFolders tittle={collTittle} amount={this.state.items[collTittle].length} color={this.getColors()}/>\r\n            )):null}\r\n         </div>\r\n  }</div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Collections;","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\NavBanner.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\Table.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\StatsTable.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\toastMessage\\ToastMessage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\Photos.js",["101"],"const fetch = require('node-fetch');\r\n\r\nvar urly = \"https://9zulviqkd0.execute-api.us-east-2.amazonaws.com/v1/imager\";\r\n\r\nexport class Photo {\r\n    get(url) {\r\n        let queryURL = urly + \"?url=\" + url;\r\n        return new Promise((resolve, reject) => {\r\n            fetch(queryURL)\r\n                .then(res => resolve(res.text()))\r\n                .catch(err => reject(err))\r\n        });\r\n    }\r\n\r\n    post(url, binary, fileType) {\r\n        return new Promise((resolve, reject) => {\r\n            let queryURL = urly + \"?url=\" + url;\r\n            var postData = {\r\n                method: 'POST',\r\n                body: binary,\r\n                headers: { 'Content-Type': fileType }\r\n            }\r\n            fetch(queryURL, postData)\r\n                .then(res => resolve(res.text()))\r\n                .catch(err => reject(err))\r\n        });\r\n    }\r\n    encodeImage(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        })\r\n    };\r\n    async uploadFile(file, fileName, type) {\r\n        try {\r\n            const b64 = await this.encodeImage(file);\r\n            var dirt = \"data:\" + type + \";base64,\"\r\n            const clean = b64.replace(dirt, \"\");\r\n            await this.post(fileName, clean, type);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// import {Photos} from \"../../util/Photos\"\r\n// const photos = new Photo();\r\n\r\n//TO UPLOAD PHOTOS:\r\n\r\n//Upload input tag:\r\n{/* <input type=\"file\" onChange={(e) => this.submitFile(e.target.files)} /> */ }\r\n\r\n//On submit event:\r\n// submitFile(event) {\r\n//     const file = event[0];\r\n//     const name = \"green.jpg\";\r\n//     photos.uploadFile(file, name, file.type);\r\n// }\r\n\r\n\r\n//TO DOWNLOAD PHOTOS:\r\n\r\n// function getter(fileName, fileType){\r\n//     try {\r\n//         const image = await photos.get(fileName);\r\n//         console.log(image);\r\n//         //To display said image (this function doesn't quite work but its <img> tag does):\r\n//         renderImage(fileType, image);\r\n//     } catch (error) {\r\n//         console.log(error);\r\n//     }\r\n// }\r\n// function renderImage(type, data){\r\n//     return <img alt=\"item\" src={`data:${type};base64,${data}`} />\r\n// }\r\n","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\Database.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\collections\\CollectionPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\itemDetailsView\\itemDetailsView.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\objectColors.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\formPage\\FormPage.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":101,"column":13,"nodeType":"108","endLine":101,"endColumn":103},{"ruleId":"106","severity":1,"message":"107","line":123,"column":64,"nodeType":"108","endLine":123,"endColumn":163},{"ruleId":"109","severity":1,"message":"110","line":63,"column":1,"nodeType":"111","messageId":"112","endLine":63,"endColumn":81},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]