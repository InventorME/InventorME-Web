[{"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\index.js":"1","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\App.js":"2","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\reportWebVitals.js":"3","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\createacctPage\\CreateAcctPage.js":"4","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\signinPage\\SignInPage.js":"5","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\profilePage\\ProfilePage.js":"6","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\NavBanner.js":"7","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\itemsPage\\ItemsPage.js":"8","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\aboutPage\\AboutPage.js":"9","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\Accounts.js":"10","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\collections\\Collections.js":"11","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\UserPool.js":"12","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\archivepage\\ArchivePage.js":"13","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\Table.js":"14","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\formPage\\FormPage.js":"15","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\toastMessage\\ToastMessage.js":"16","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\folderPage\\FolderPage.js":"17","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\FolderTable.js":"18","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\statsPage\\StatsPage.js":"19","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\StatsTable.js":"20","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\ItemsTable.js":"21"},{"size":1872,"mtime":1617222137980,"results":"22","hashOfConfig":"23"},{"size":242,"mtime":1616796138333,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1612304423312,"results":"25","hashOfConfig":"23"},{"size":5898,"mtime":1617329228171,"results":"26","hashOfConfig":"23"},{"size":3295,"mtime":1617329228189,"results":"27","hashOfConfig":"23"},{"size":9703,"mtime":1617329228187,"results":"28","hashOfConfig":"23"},{"size":5816,"mtime":1617329228181,"results":"29","hashOfConfig":"23"},{"size":464,"mtime":1617329228186,"results":"30","hashOfConfig":"23"},{"size":793,"mtime":1616796138340,"results":"31","hashOfConfig":"23"},{"size":3107,"mtime":1616796138349,"results":"32","hashOfConfig":"23"},{"size":343,"mtime":1616963589598,"results":"33","hashOfConfig":"23"},{"size":216,"mtime":1615848571754,"results":"34","hashOfConfig":"23"},{"size":525,"mtime":1617031454713,"results":"35","hashOfConfig":"23"},{"size":2444,"mtime":1617329228184,"results":"36","hashOfConfig":"23"},{"size":10946,"mtime":1617329228155,"results":"37","hashOfConfig":"23"},{"size":979,"mtime":1616796138337,"results":"38","hashOfConfig":"23"},{"size":532,"mtime":1617044941235,"results":"39","hashOfConfig":"23"},{"size":3658,"mtime":1617328139106,"results":"40","hashOfConfig":"23"},{"size":469,"mtime":1617329228188,"results":"41","hashOfConfig":"23"},{"size":11779,"mtime":1617329228183,"results":"42","hashOfConfig":"23"},{"size":2264,"mtime":1617329228173,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ltdj4q",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\index.js",[],["91","92"],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\App.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\reportWebVitals.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\createacctPage\\CreateAcctPage.js",["93","94","95","96"],"import React, { Component } from 'react';\r\nimport './CreateAcctPage.css';\r\nimport InventorLogo from '../images/InventorMeLogo.png';\r\nimport { BrowserRouter, Route, Switch ,Link} from \"react-router-dom\";\r\nimport ProfileBox from '../images/profile-box.png'\r\nimport BackButton from '../images/back-button.png'\r\n\r\nclass CreateAcctPage extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: '', post: '' }\r\n  }\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res }))\r\n      .catch(err => console.log(err));\r\n  }\r\n  \r\n  callApi = async () => {\r\n    const response = await fetch('/api/profile');\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n    return body;\r\n  };\r\n\r\n    render(){\r\n    return (\r\n      <div class=\"createacct-title\">\r\n\r\n      <div class=\"createacct-inventor-title\">\r\n      <h2>InventorME</h2>\r\n      </div>\r\n\r\n      <Link to=\"/signin-page\" style={{ textDecoration: 'none' }}>\r\n          <img src={BackButton} class=\"backwards\" alt=\"back\" />\r\n        </Link> \r\n\r\n    <p class =\"Email2\"> Email: </p>\r\n    <input type=\"text\"  input class = \"email2\" onChange={this.handleChange}/>\r\n\r\n    <p class = \"Fname\"> First Name: </p>\r\n    <input type=\"text\"  input class = \"first\" onChange={this.handleChange}/>\r\n\r\n    <p class = \"Lname\"> Last Name: </p>\r\n    <input type=\"text\"  input class = \"last\" onChange={this.handleChange}/>\r\n\r\n    <p class = \"Phone\"> Phone Number: </p>\r\n    <input type = \"text\" input class = \"phone\" value={this.state.value} onChange={this.handleChange}/>\r\n\r\n    <p class = \"Password2\"> Password: </p>\r\n    <input type=\"password\"  input class = \"password2\" onChange={this.handleChange}/>\r\n\r\n    <button class=\"goto-account\" onClick={event =>  window.location.href=\"/signin-page\"}>Create Account </button>\r\n    <img src={InventorLogo} class=\"calogo\" alt=\"\" />\r\n\r\n</div>\r\n      \r\n      \r\n      \r\n      \r\n\r\n  \r\n        \r\n    \r\n      );\r\n    }\r\n}\r\nexport default CreateAcctPage;","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\signinPage\\SignInPage.js",["97","98","99"],"import React, { Component } from 'react';\r\nimport './SignInPage.css';\r\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\r\nimport ProfileBox from '../images/profile-box.png';\r\n\r\nclass SignInPage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { response: '', post: '' }\r\n      }\r\n      componentDidMount() {\r\n        this.callApi()\r\n          .then(res => this.setState({ response: res }))\r\n          .catch(err => console.log(err));\r\n      }\r\n      \r\n      callApi = async () => {\r\n        const response = await fetch('/api/profile');\r\n        const body = await response.json();\r\n        if (response.status !== 200) throw Error(body.message);\r\n        return body;\r\n      };\r\n    \r\n\r\n   render(){\r\n       return(\r\n    <div class=\"signin-title\">\r\n    <div class=\"signin-inventor-title\">\r\n    <h2>InventorME</h2>\r\n    </div>\r\n\r\n    <div  class=\"login-box\">\r\n    <img class = \"lbox\"img style = {this.state.style} src={ProfileBox} alt=\"\"/>\r\n    <p class =\"Password\"> Password: </p>\r\n    <input type=\"password\"  input class = \"password\" value={this.state.value} onChange={this.handleChange}/>\r\n    <p class =\"Email\"> Email: </p>\r\n    <input type=\"text\"  input class = \"email\" value={this.state.value} onChange={this.handleChange}/>\r\n        <button class=\"login-account\" onClick={event =>  window.location.href=\"/accounts-page\"}>Log in</button>\r\n        <p class =\"or-message\"> Don't have an account?</p>\r\n        <button class=\"create-account\" onClick={event =>  window.location.href=\"/createacct-page\"}>Create an Account </button>\r\n      </div>\r\n      </div>\r\n\r\n\r\n    \r\n      \r\n       );\r\n  }\r\n}\r\n    \r\n   \r\n    \r\nexport default SignInPage;","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\profilePage\\ProfilePage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\NavBanner.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\itemsPage\\ItemsPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\aboutPage\\AboutPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\Accounts.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\collections\\Collections.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\UserPool.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\archivepage\\ArchivePage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\Table.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\formPage\\FormPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\toastMessage\\ToastMessage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\folderPage\\FolderPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\FolderTable.js",["100"],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\statsPage\\StatsPage.js",["101"],"import React, { Component } from 'react'\r\nimport './StatsPage.css'\r\nimport NavBanner from '../NavBanner.js'\r\nimport StatsTable from '../StatsTable.js'\r\n\r\nclass StatsPage extends Component {\r\n    render() {\r\n        return (\r\n        <div>\r\n            <NavBanner/>\r\n<<<<<<< HEAD\r\n            \r\n            <div>\r\n            <StatsTable/>\r\n=======\r\n            <div style={{marginTop: '8%', marginLeft: '13%'}}>\r\n                <div>\r\n                <StatsTable/>\r\n                </div>\r\n>>>>>>> 4091f09489101a72867c1022ade8da11b7ad336b\r\n            </div>\r\n        </div>        \r\n        );\r\n      }\r\n    }\r\n \r\n  \r\n\r\nexport default StatsPage;","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\StatsTable.js",["102","103","104","105"],"import React, { Component } from 'react';\r\nimport './StatsTable.css'\r\nimport upload from '../images/upload-button.png'\r\nimport { AccountContext } from '../util/Accounts'\r\nimport Collapsible from 'react-collapsible'\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport {buildStyles} from 'react-circular-progressbar';\r\n\r\n\r\n// The order of the circles starts at the top and goes right then down\r\n// So, for example, Circle1 = top left corner, circle4 = top right corner, \r\n// circle8 = bottom left corner, etc\r\n\r\n\r\n\r\nclass StatsTable extends Component {\r\n  static contextType = AccountContext\r\n  constructor(props){\r\n      super(props)\r\n      this.state = {\r\n          Archived_Items: [],\r\n          Headers: ['Name', 'Category', 'Notes', 'Archived'],\r\n      }\r\n  }\r\n\r\n  componentDidMount(){\r\n      const { getSession } = this.context;\r\n      getSession()\r\n          .then((data) => {\r\n              this.getItems(data.email).then(data => this.setState({ Archived_Items: data}))\r\n          })\r\n          .catch(err =>{\r\n          console.log(err);\r\n          });\r\n  }\r\n  getItems = async (email) => {\r\n      let queryURL = 'https://3cv3j619jg.execute-api.us-east-2.amazonaws.com/test/inventorme-items?userEmail=\"' + email + '\"';\r\n      const response = await fetch(queryURL.toString());\r\n      const body = await response.json();\r\n    console.log(body)\r\n     if(body.items.length > 0)\r\n\r\n      if(body.items.filter(item => item.itemArchived === 1)){\r\n      \r\n        let archivedItems = [];\r\n       archivedItems = body.items.filter(item => item.itemArchived === 1)\r\n     // console.log(archivedItems.length)\r\n      \r\n         if (response.status !== 200) throw Error(body.message);\r\n     // return archivedItems.length\r\n     this.setState({archiveLength:archivedItems.length})\r\n     this.setState({allLength:body.items.length})\r\n      }\r\n//-----------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n      if(body.items.filter(item => item.itemArchived === 0)){\r\n  \r\n     //   currentItems = [];\r\n    //   currentItems = body.items.filter(item => item.itemArchived === 0)\r\n   //   console.log(output.length)\r\n  for(var i = 0; i < body.items.length; i++){\r\n    var obj = body.items[i];\r\n    for(var prop in obj){\r\n        if(obj.hasOwnProperty(prop) && obj[prop] !== null && !isNaN(obj[prop])){\r\n            obj[prop] = +obj[prop];   \r\n            var output = body.items.reduce((arr,d,x) =>{\r\n              var keys = Object.keys(d);\r\n              keys.forEach( (k) => {\r\n                if(!arr[k]) arr[k] = 0;\r\n                arr[k] = arr[k] + d[k];\r\n              })\r\n              return arr;\r\n            },{});\r\n        }\r\n}\r\n\r\n    if (response.status !== 200) throw Error(body.message);\r\n  //   console.log(output)\r\n  \r\n   //  console.log(output.itemWorth)\r\n   //  console.log(output.itemPurchaseAmount)\r\n     //console.log((output.itemPurchaseAmount-output.itemWorth)/(output.itemPurchaseAmount))\r\n    //  if (response.status !== 200) throw Error(body.message);\r\n    //this.setState({Sold:output.})\r\n    this.setState({Lost:((output.itemPurchaseAmount-output.itemWorth)/(output.itemPurchaseAmount)).toFixed(2)})\r\n    this.setState({depreciation:Math.round(output.itemPurchaseAmount)})\r\n     this.setState({currentWorth:Math.round(output.itemWorth)})\r\n     //this.setState({Costper:output.itemRecurringPaymentAmount})\r\n     this.setState({allLength:body.items.length})\r\n      }\r\n      if(body.items.filter(item => item.itemSellAmount !== null)){\r\n        let soldItems = [];\r\n        soldItems = body.items.filter(item => item.itemSellAmount !== null)\r\n      if (response.status !== 200) throw Error(body.message)\r\n      this.setState({soldLength:soldItems.length})\r\n        \r\n      }\r\n\r\n\r\n      if(body.items.filter(item => item.itemRecurringPaymentAmount !== null)){\r\n        let payItems = [];\r\n        payItems = body.items.filter(item => item.itemSellAmount !== null)\r\n      if (response.status !== 200) throw Error(body.message)\r\n      this.setState({Costper:output.itemRecurringPaymentAmount.toFixed(2)})\r\n        \r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  renderTableHeader(){\r\n      return this.state.Headers.map((key,index) => {\r\n          return <th key={index}>{key.toUpperCase()}</th>\r\n      })\r\n  }\r\n\r\n\r\n    render() {\r\n     \r\n      const percentage = 100;\r\n        return (\r\n\r\n\r\n   <div> \r\n  <p className = \"Circle_1\"> Net Worth </p>\r\n  <div className = \"Circle1\"style={{ width: 200, height: 200 }}>       \r\n  <CircularProgressbar\r\n  value={percentage}\r\n  text={`$${Math.round(this.state.currentWorth/this.state.allLength)*100}`}\r\n  styles={buildStyles({\r\n    // Rotation of path and trail, in number of turns (0-1)\r\n    rotation: 0.25,\r\n    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n    strokeLinecap: 'butt',\r\n    // Text size\r\n    textSize: '16px',\r\n    // How long animation takes to go from one percentage to another, in seconds\r\n    pathTransitionDuration: 0.5,\r\n    // Can specify path transition in more detail, or remove it entirely\r\n    // pathTransition: 'none',\r\n    // Colors\r\n    pathColor: `rgba(14, 126, 146, ${percentage / 100})`,\r\n    textColor: '#000000',\r\n    trailColor: '#d6d6d6',\r\n    backgroundColor: '#0e7e92',\r\n  })}\r\n/>\r\n</div>\r\n<p className = \"Circle_2\"> Depreciation </p>\r\n<div className = \"Circle2\"style={{ width: 200, height: 200 }}>       \r\n  <CircularProgressbar\r\n  value={(this.state.depreciation-this.state.currentWorth)/100}\r\n  text={`$${(this.state.depreciation-this.state.currentWorth)}`}\r\n  styles={buildStyles({\r\n    // Rotation of path and trail, in number of turns (0-1)\r\n    rotation: 0.25,\r\n    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n    strokeLinecap: 'butt',\r\n    // Text size\r\n    textSize: '16px',\r\n    // How long animation takes to go from one percentage to another, in seconds\r\n    pathTransitionDuration: 0.5,\r\n    // Can specify path transition in more detail, or remove it entirely\r\n    // pathTransition: 'none',\r\n    // Colors\r\n    pathColor: `rgba(14, 126, 146, ${(this.state.depreciation-this.state.currentWorth)/100})`,\r\n    textColor: '#000000',\r\n    trailColor: '#d6d6d6',\r\n    backgroundColor: '#0e7e92',\r\n  })}\r\n/>\r\n</div>\r\n\r\n\r\n<p className = \"Circle_3\">Archived Items </p>\r\n<div className = \"Circle3\"style={{ width: 200, height: 200 }}>       \r\n  <CircularProgressbar\r\n  value={(this.state.archiveLength/this.state.allLength)*100}\r\n  text={`${this.state.archiveLength}`}\r\n  styles={buildStyles({\r\n    // Rotation of path and trail, in number of turns (0-1)\r\n    rotation: 0.25,\r\n    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n    strokeLinecap: 'butt',\r\n    // Text size\r\n    textSize: '16px',\r\n    // How long animation takes to go from one percentage to another, in seconds\r\n    pathTransitionDuration: 0.5,\r\n    // Can specify path transition in more detail, or remove it entirely\r\n    // pathTransition: 'none',\r\n    // Colors\r\n    pathColor: `rgba(14, 126, 146, ${(this.state.archiveLength/this.state.allLength)*100})`,\r\n    textColor: '#000000',\r\n    trailColor: '#d6d6d6',\r\n    backgroundColor: '#0e7e92',\r\n  })}\r\n/>\r\n</div>\r\n\r\n<p className = \"Circle_4\"> # All Items </p>\r\n<div className = \"Circle4\"style={{ width: 200, height: 200 }}>       \r\n  <CircularProgressbar\r\n  value={100}\r\n  text={`${this.state.allLength}`}\r\n  styles={buildStyles({\r\n    // Rotation of path and trail, in number of turns (0-1)\r\n    rotation: 0.25,\r\n    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n    strokeLinecap: 'butt',\r\n    // Text size\r\n    textSize: '16px',\r\n    // How long animation takes to go from one percentage to another, in seconds\r\n    pathTransitionDuration: 0.5,\r\n    // Can specify path transition in more detail, or remove it entirely\r\n    // pathTransition: 'none',\r\n    // Colors\r\n    pathColor: `rgba(14, 126, 146, ${this.state.allLength})`,\r\n    textColor: '#000000',\r\n    trailColor: '#d6d6d6',\r\n    backgroundColor: '#0e7e92',\r\n  })}\r\n/>\r\n</div>\r\n<p className = \"Circle_5\"> Money Invested </p>\r\n<div className = \"Circle5\"style={{ width: 200, height: 200 }}>       \r\n  <CircularProgressbar\r\n  value={percentage}\r\n  text={`$${this.state.depreciation}`}\r\n  styles={buildStyles({\r\n    // Rotation of path and trail, in number of turns (0-1)\r\n    rotation: 0.25,\r\n    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n    strokeLinecap: 'butt',\r\n    // Text size\r\n    textSize: '16px',\r\n    // How long animation takes to go from one percentage to another, in seconds\r\n    pathTransitionDuration: 0.5,\r\n    // Can specify path transition in more detail, or remove it entirely\r\n    // pathTransition: 'none',\r\n    // Colors\r\n    pathColor: `rgba(14, 126, 146, ${percentage / 100})`,\r\n    textColor: '#000000',\r\n    trailColor: '#d6d6d6',\r\n    backgroundColor: '#0e7e92',\r\n  })}\r\n/>\r\n</div>\r\n\r\n<p className = \"Circle_6\"> Items Sold </p>\r\n<div className = \"Circle6\"style={{ width: 200, height: 200 }}>       \r\n  <CircularProgressbar\r\n  value={this.state.soldLength}\r\n  text={`${this.state.soldLength}`}\r\n  styles={buildStyles({\r\n    // Rotation of path and trail, in number of turns (0-1)\r\n    rotation: 0.25,\r\n    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n    strokeLinecap: 'butt',\r\n    // Text size\r\n    textSize: '16px',\r\n    // How long animation takes to go from one percentage to another, in seconds\r\n    pathTransitionDuration: 0.5,\r\n    // Can specify path transition in more detail, or remove it entirely\r\n    // pathTransition: 'none',\r\n    // Colors\r\n    pathColor: `rgba(14, 126, 146, ${percentage / 100})`,\r\n    textColor: '#000000',\r\n    trailColor: '#d6d6d6',\r\n    backgroundColor: '#0e7e92',\r\n  })}\r\n/>\r\n</div>\r\n<p className = \"Circle_7\"> % Money Lost </p>\r\n<div className = \"Circle7\"style={{ width: 200, height: 200 }}>       \r\n  <CircularProgressbar\r\n  value={this.state.Lost*100}\r\n  text={`${this.state.Lost*100}%`}\r\n  styles={buildStyles({\r\n    // Rotation of path and trail, in number of turns (0-1)\r\n    rotation: 0.25,\r\n    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n    strokeLinecap: 'butt',\r\n    // Text size\r\n    textSize: '16px',\r\n    // How long animation takes to go from one percentage to another, in seconds\r\n    pathTransitionDuration: 0.5,\r\n    // Can specify path transition in more detail, or remove it entirely\r\n    // pathTransition: 'none',\r\n    // Colors\r\n    pathColor: `rgba(14, 126, 146, ${percentage / 100})`,\r\n    textColor: '#000000',\r\n    trailColor: '#d6d6d6',\r\n    backgroundColor: '#0e7e92',\r\n    \r\n     \r\n  })}\r\n/>\r\n</div>\r\n<p className = \"Circle_8\"> Monthly Recurring Cost </p>\r\n<div className = \"Circle8\"style={{ width: 200, height: 200 }}>       \r\n  <CircularProgressbar\r\n  value={this.state.Costper}\r\n  text={`$${this.state.Costper}/Mo`}\r\n  styles={buildStyles({\r\n    // Rotation of path and trail, in number of turns (0-1)\r\n    rotation: 0.25,\r\n    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n    strokeLinecap: 'butt',\r\n    // Text size\r\n    textSize: '16px',\r\n    // How long animation takes to go from one percentage to another, in seconds\r\n    pathTransitionDuration: 0.5,\r\n    // Can specify path transition in more detail, or remove it entirely\r\n    // pathTransition: 'none',\r\n    // Colors\r\n    pathColor: `rgba(14, 126, 146, ${percentage / 100})`,\r\n    textColor: '#000000',\r\n    trailColor: '#d6d6d6',\r\n    backgroundColor: '#0e7e92',\r\n  })}\r\n/>\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default StatsTable;","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\ItemsTable.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":23},{"ruleId":"110","severity":1,"message":"114","line":4,"column":25,"nodeType":"112","messageId":"113","endLine":4,"endColumn":30},{"ruleId":"110","severity":1,"message":"115","line":4,"column":32,"nodeType":"112","messageId":"113","endLine":4,"endColumn":38},{"ruleId":"110","severity":1,"message":"116","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":18},{"ruleId":"110","severity":1,"message":"117","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":14},{"ruleId":"110","severity":1,"message":"118","line":3,"column":16,"nodeType":"112","messageId":"113","endLine":3,"endColumn":26},{"ruleId":"110","severity":1,"message":"119","line":3,"column":28,"nodeType":"112","messageId":"113","endLine":3,"endColumn":38},{"ruleId":"110","severity":1,"message":"120","line":6,"column":10,"nodeType":"112","messageId":"113","endLine":6,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"121","line":11,"column":2},{"ruleId":"110","severity":1,"message":"122","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":14},{"ruleId":"110","severity":1,"message":"123","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":19},{"ruleId":"110","severity":1,"message":"124","line":8,"column":10,"nodeType":"112","messageId":"113","endLine":8,"endColumn":41},{"ruleId":"110","severity":1,"message":"125","line":106,"column":9,"nodeType":"112","messageId":"113","endLine":106,"endColumn":17},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'ProfileBox' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'withRouter' is defined but never used.","'Button' is defined but never used.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  9 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33mNavBanner\u001b[39m\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m            \u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33mStatsTable\u001b[39m\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","'upload' is defined but never used.","'Collapsible' is defined but never used.","'CircularProgressbarWithChildren' is defined but never used.","'payItems' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]