[{"C:\\Users\\esteb\\github\\inventor-me\\src\\index.js":"1","C:\\Users\\esteb\\github\\inventor-me\\src\\reportWebVitals.js":"2","C:\\Users\\esteb\\github\\inventor-me\\src\\App.js":"3","C:\\Users\\esteb\\github\\inventor-me\\src\\signinPage\\SignInPage.js":"4","C:\\Users\\esteb\\github\\inventor-me\\src\\util\\Accounts.js":"5","C:\\Users\\esteb\\github\\inventor-me\\src\\createacctPage\\CreateAcctPage.js":"6","C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\itemsPage\\ItemsPage.js":"7","C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\aboutPage\\AboutPage.js":"8","C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\collections\\Collections.js":"9","C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\profilePage\\ProfilePage.js":"10","C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\archivepage\\ArchivePage.js":"11","C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\NavBanner.js":"12","C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\ItemsTable.js":"13","C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\Table.js":"14","C:\\Users\\esteb\\github\\inventor-me\\src\\util\\UserPool.js":"15","C:\\Users\\esteb\\github\\inventor-me\\src\\components\\toastMessage\\ToastMessage.js":"16","C:\\Users\\esteb\\github\\inventor-me\\src\\components\\formPage\\FormPage.js":"17","C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\folderPage\\FolderPage.js":"18","C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\FolderTable.js":"19"},{"size":1757,"mtime":1617145748048,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1617144065293,"results":"22","hashOfConfig":"21"},{"size":242,"mtime":1617144065214,"results":"23","hashOfConfig":"21"},{"size":3295,"mtime":1617144065297,"results":"24","hashOfConfig":"21"},{"size":3107,"mtime":1617144065299,"results":"25","hashOfConfig":"21"},{"size":5898,"mtime":1617144065226,"results":"26","hashOfConfig":"21"},{"size":464,"mtime":1617145748080,"results":"27","hashOfConfig":"21"},{"size":793,"mtime":1617144065267,"results":"28","hashOfConfig":"21"},{"size":410,"mtime":1617147643092,"results":"29","hashOfConfig":"21"},{"size":9703,"mtime":1617144065291,"results":"30","hashOfConfig":"21"},{"size":525,"mtime":1617145748066,"results":"31","hashOfConfig":"21"},{"size":5798,"mtime":1617145748060,"results":"32","hashOfConfig":"21"},{"size":2250,"mtime":1617145748056,"results":"33","hashOfConfig":"21"},{"size":2444,"mtime":1617145748063,"results":"34","hashOfConfig":"21"},{"size":216,"mtime":1617144065301,"results":"35","hashOfConfig":"21"},{"size":979,"mtime":1617144065222,"results":"36","hashOfConfig":"21"},{"size":10946,"mtime":1617144065220,"results":"37","hashOfConfig":"21"},{"size":532,"mtime":1617145748078,"results":"38","hashOfConfig":"21"},{"size":2527,"mtime":1617145748053,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"l70c9q",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},"C:\\Users\\esteb\\github\\inventor-me\\src\\index.js",[],["82","83"],"C:\\Users\\esteb\\github\\inventor-me\\src\\reportWebVitals.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\App.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\signinPage\\SignInPage.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\util\\Accounts.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\createacctPage\\CreateAcctPage.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\itemsPage\\ItemsPage.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\aboutPage\\AboutPage.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\collections\\Collections.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\profilePage\\ProfilePage.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\archivepage\\ArchivePage.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\NavBanner.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\ItemsTable.js",["84","85"],"import React, { Component } from 'react';\r\nimport upload from '../images/upload-button.png'\r\n\r\nimport './ItemsTable.css'\r\n\r\n\r\n\r\nclass ItemsTable extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \r\n    \r\n            Current_Items:[\r\n                {Name:\"Inventory\", Collections: \"Hardware\", Notes: \"Apple\",Image:<img src={upload} width=\"40\" height=\"30\"/>  },\r\n                {Name:\"InventorME\",  Collections: \"Software\", Notes: \"Microsoft\", Image:<img src={upload} width=\"40\" height=\"30\"/> }\r\n            ]\r\n        }\r\n    }\r\n    renderTableData(){\r\n    \r\n        return this.state.Current_Items.map((Current_Item,index) => {\r\n            \r\n            const {Name,Collections,Notes,Image} = Current_Item\r\n            return(\r\n                <tr key = {Name}>\r\n                <td>{Name}</td> \r\n                <td>{Collections}</td>\r\n                <td>{Notes}</td>\r\n                <td>{Image}</td>   \r\n                </tr>\r\n            )\r\n        })\r\n    \r\n    }\r\n    \r\n    getJSON = function(url,callback){\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET',url,true);\r\n        xhr.responseType = 'json';\r\n        xhr.oonload = function(){\r\n            var status = xhr.status;\r\n            if(status === 200){\r\n                callback(null,xhr.response);\r\n            }else{\r\n                callback(status,xhr.response)\r\n            }\r\n        };\r\n        xhr.send();\r\n    };\r\n    \r\n    renderTableHeader(){\r\n        let header = Object.keys(this.state.Current_Items[0])\r\n        return header.map((key,index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n    render() {\r\n      \r\n        return (\r\n        <div>\r\n                <h1 id = 'Title'>Current Items</h1>\r\n                <table id= 'Current_Items'>\r\n                <tbody>\r\n                <tr>{this.renderTableHeader()}</tr>\r\n                {this.renderTableData()}\r\n            \r\n                </tbody>\r\n                </table>\r\n               \r\n                </div>\r\n        )\r\n    }\r\n}\r\n    export default ItemsTable;","C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\Table.js",["86","87"],"import React, { Component } from 'react';\r\nimport archived from '../images/archived.png'\r\n\r\nimport './Table.css'\r\n\r\n\r\n\r\nclass Table extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \r\n    \r\n            Archived_Items:[\r\n                {Name:\"Inventory\", Collections: \"Electronics\", Notes: \"Los Angeles\",Archived:<img src={archived} width=\"40\" height=\"20\"/>  },\r\n                {Name:\"InventorME\",  Collections: \"Internet\", Notes: \"New York City\", Archived:<img src={archived} width=\"40\" height=\"20\"/> }\r\n            ]\r\n        }\r\n    }\r\n    renderTableData(){\r\n    \r\n        return this.state.Archived_Items.map((Archived_Item,index) => {\r\n            \r\n            const {Name,Collections,Notes,Archived} = Archived_Item\r\n            return(\r\n                <tr key = {Name}>\r\n                <td>{Name}</td> \r\n                <td>{Collections}</td>\r\n                <td>{Notes}</td>\r\n                <td>{Archived}</td>   \r\n                </tr>\r\n            )\r\n        })\r\n    \r\n    }\r\n    \r\n    getJSON = function(url,callback){\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET',url,true);\r\n        xhr.responseType = 'json';\r\n        xhr.oonload = function(){\r\n            var status = xhr.status;\r\n            if(status === 200){\r\n                callback(null,xhr.response);\r\n            }else{\r\n                callback(status,xhr.response)\r\n            }\r\n        };\r\n        xhr.send();\r\n    };\r\n    \r\n    renderTableHeader(){\r\n        let header = Object.keys(this.state.Archived_Items[0])\r\n        return header.map((key,index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n    render() {\r\n      \r\n        return (\r\n        <div>\r\n                <h1 id = 'title'>Archived Items</h1>\r\n                <table id= 'Archived_Items'>\r\n                <tbody>\r\n                <tr>{this.renderTableHeader()}</tr>\r\n                {this.renderTableData()}\r\n            \r\n                </tbody>\r\n                </table>\r\n               \r\n                </div>\r\n        )\r\n    }\r\n}\r\n    export default Table;","C:\\Users\\esteb\\github\\inventor-me\\src\\util\\UserPool.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\components\\toastMessage\\ToastMessage.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\components\\formPage\\FormPage.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\folderPage\\FolderPage.js",[],"C:\\Users\\esteb\\github\\inventor-me\\src\\navigationBanner\\FolderTable.js",["88","89"],"import React, { Component } from 'react';\r\nimport './FolderTable.css'\r\nimport upload from '../images/upload-button.png'\r\nimport { AccountContext } from '../util/Accounts';\r\nimport Collapsible from 'react-collapsible';\r\nimport { Button} from 'react-bootstrap';\r\n\r\nclass FolderTable extends Component {\r\n    static contextType = AccountContext\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            Folder_Items: [],\r\n            Headers: ['Name', 'Category', 'Notes', 'Image'],\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { getSession } = this.context;\r\n        getSession()\r\n            .then((data) => {\r\n                this.getItems(data.email).then(data => this.setState({ Folder_Items: data}))\r\n            })\r\n            .catch(err =>{\r\n            console.log(err);\r\n            });\r\n    }\r\n  \r\n    getItems = async (email) => {\r\n        let queryURL = 'https://3cv3j619jg.execute-api.us-east-2.amazonaws.com/test/inventorme-items?userEmail=\"' + email + '\"';\r\n        const response = await fetch(queryURL.toString());\r\n        const body = await response.json();\r\n        \r\n        let folderItems = [];\r\n        \r\n       if(body.items.length > 0)\r\n         folderItems = body.items.filter(item => item.itemFolder != \"null\")\r\n        console.log(folderItems)\r\n           if (response.status !== 200) throw Error(body.message);\r\n        return folderItems;\r\n        \r\n    }\r\n\r\n    renderTableHeader(){\r\n        return this.state.Headers.map((key,index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n   \r\n\r\n\r\n    render() {\r\n\r\n        \r\n      \r\n        return (\r\n                \r\n            <Collapsible trigger= \"personal\">\r\n            <table id= 'Folder_Items' style={{ marginBottom: '12em'}}>\r\n            <tbody>\r\n            <tr>{this.renderTableHeader()}</tr>\r\n            { this.state.Folder_Items ? this.state.Folder_Items.map((Folder_Item) => (\r\n            <tr key = {Folder_Item.itemName}>\r\n            <td>{Folder_Item.itemName}</td> \r\n            <td>{Folder_Item.itemCategory}</td>\r\n            <td>{Folder_Item.itemNotes}</td>\r\n            <td>{ Folder_Item.itemPhotoURL ?  <img src={Folder_Item.itemPhotoURL} alt=\"\" width=\"40\" height=\"30\"/> :\r\n                <img src={upload} alt=\"\" width=\"40\" height=\"30\"/>}</td>   \r\n            </tr>\r\n            )) : null}\r\n            </tbody>\r\n            </table>\r\n                </Collapsible>\r\n            \r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n}\r\nexport default FolderTable;",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":16,"column":82,"nodeType":"96","endLine":16,"endColumn":124},{"ruleId":"94","severity":1,"message":"95","line":17,"column":89,"nodeType":"96","endLine":17,"endColumn":131},{"ruleId":"94","severity":1,"message":"95","line":16,"column":94,"nodeType":"96","endLine":16,"endColumn":138},{"ruleId":"94","severity":1,"message":"95","line":17,"column":96,"nodeType":"96","endLine":17,"endColumn":140},{"ruleId":"97","severity":1,"message":"98","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":16},{"ruleId":"101","severity":1,"message":"102","line":37,"column":66,"nodeType":"103","messageId":"104","endLine":37,"endColumn":68},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]