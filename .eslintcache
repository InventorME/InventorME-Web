[{"/Users/lukemiller/Developer/Capstone/inventor-me/src/index.js":"1","/Users/lukemiller/Developer/Capstone/inventor-me/src/reportWebVitals.js":"2","/Users/lukemiller/Developer/Capstone/inventor-me/src/App.js":"3","/Users/lukemiller/Developer/Capstone/inventor-me/src/createacctPage/CreateAcctPage.js":"4","/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/profilePage/ProfilePage.js":"5","/Users/lukemiller/Developer/Capstone/inventor-me/src/signinPage/SignInPage.js":"6","/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/NavBanner.js":"7","/Users/lukemiller/Developer/Capstone/inventor-me/src/util/Accounts.js":"8","/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/aboutPage/AboutPage.js":"9","/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/itemsPage/ItemsPage.js":"10","/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/collections/Collections.js":"11","/Users/lukemiller/Developer/Capstone/inventor-me/src/util/UserPool.js":"12","/Users/lukemiller/Developer/Capstone/inventor-me/src/components/toastMessage/ToastMessage.js":"13"},{"size":1439,"mtime":1616700950095,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1615741921795,"results":"16","hashOfConfig":"15"},{"size":229,"mtime":1616700950091,"results":"17","hashOfConfig":"15"},{"size":5724,"mtime":1616700950094,"results":"18","hashOfConfig":"15"},{"size":9417,"mtime":1616700950103,"results":"19","hashOfConfig":"15"},{"size":3196,"mtime":1616700950106,"results":"20","hashOfConfig":"15"},{"size":6513,"mtime":1616700950169,"results":"21","hashOfConfig":"15"},{"size":2986,"mtime":1616700950109,"results":"22","hashOfConfig":"15"},{"size":771,"mtime":1616700950097,"results":"23","hashOfConfig":"15"},{"size":404,"mtime":1616700950101,"results":"24","hashOfConfig":"15"},{"size":310,"mtime":1616700950099,"results":"25","hashOfConfig":"15"},{"size":209,"mtime":1616700950110,"results":"26","hashOfConfig":"15"},{"size":940,"mtime":1616700950094,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8nbxrd",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lukemiller/Developer/Capstone/inventor-me/src/index.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/reportWebVitals.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/App.js",[],["57","58"],"/Users/lukemiller/Developer/Capstone/inventor-me/src/createacctPage/CreateAcctPage.js",["59","60","61","62"],"import React, { Component } from 'react';\nimport './CreateAcctPage.css';\nimport InventorLogo from '../images/InventorMeLogo.png';\nimport { Link} from \"react-router-dom\";\nimport BackButton from '../images/back-button.png';\nimport UserPool from \"../util/UserPool\";\nimport { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\nimport ToastMessage from '../components/toastMessage/ToastMessage';\n\n\nclass CreateAcctPage extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {response: '', post: '', email: '', password: '', phone_number: '', name: '', family_name: '', loading: false}\n    this.setPassword = this.setPassword.bind(this);\n    this.setEmail = this.setEmail.bind(this);\n    this.validateUser = this.validateUser.bind(this);\n    this.submit = this.submit.bind(this);\n    this.setPhone = this.setPhone.bind(this);\n    this.setName = this.setName.bind(this);\n    this.setFamilyName = this.setFamilyName.bind(this);\n    this.toast = React.createRef();\n  }\n  \n  setEmail(event){\n    this.setState({ email: event.target.value});\n    event.preventDefault();\n  }\n  setPassword(event){\n    this.setState({ password: event.target.value});\n    event.preventDefault();\n  }\n  setName(event){\n    this.setState({ name: event.target.value});\n    event.preventDefault();\n  }\n  setFamilyName(event){\n    this.setState({ family_name: event.target.value});\n    event.preventDefault();\n  }\n  setPhone(event){\n    this.setState({ phone_number: event.target.value});\n    event.preventDefault();\n  }\n\n  submit(event){\n    this.setState({ loading: true})\n    const attributeList = [];\n    attributeList.push(new CognitoUserAttribute({\n      Name: 'name',\n      Value: this.state.name\n    }));\n    attributeList.push(new CognitoUserAttribute({\n      Name: 'phone_number',\n      Value: this.state.phone_number\n    }));\n    attributeList.push(new CognitoUserAttribute({\n      Name: 'family_name',\n      Value: this.state.family_name\n    }));\n\n    UserPool.signUp(this.state.email, this.state.password, attributeList, null, (err, data) => {\n      if (err){\n        this.setState({ loading: true})\n        this.toastMessage('Error creating account')\n      } \n      //If no errors new user is created here\n      else{\n        window.location.href=\"/items-page\";\n      }\n      \n    });\n\n  }\n  upperCheck(str){\n    if(str.toLowerCase() === str){\n      return false;\n    }\n    return true;\n  }\n  lowerCheck(str){\n    if(str.toUpperCase() === str){\n      return false;\n    }\n    return true;\n  }\n  alphCheck(str){\n    var regex = /[a-zA-Z]/g;\n    return regex.test(str);\n  }\n  numCheck(str){\n    var regex = /\\d/g;\n    return regex.test(str);\n  }\n  phoneCheck(num){\n    //insert phone number checking here\n    var regex = /^(\\+1\\d{3}\\d{3}\\d{4}$)/g\n    return regex.test(num);\n  }\n  emailCheck(str){\n    var regex = /^[a-zA-Z]+[0-9_.+-]*@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/g\n    return regex.test(str);\n  }\n  \n\n\n  validateUser(){\n    if(this.state.name === \"\"){\n      this.toastMessage(\"Create Account Error: Please Type First Name\");\n    }else if(this.state.family_name === \"\"){\n      this.toastMessage(\"Create Account Error: Please Type Last Name\");\n    }else if(this.state.password.length<8){\n      this.toastMessage(\"Create Account Error: Password Must Be At Least 8 Characters Long\");\n    }else if(!this.alphCheck(this.state.password)){\n      this.toastMessage(\"Create Account Error: Password Must Contain Letter\");\n    }else if(!this.upperCheck(this.state.password)){\n      this.toastMessage(\"Create Account Error: Password Must Contain One Upper-Case Letter\");\n    }else if(!this.lowerCheck(this.state.password)){\n      this.toastMessage(\"Create Account Error: Password Must Contain One Lower-Case Letter\");\n    }else if(!this.numCheck(this.state.password)){\n      this.toastMessage(\"Create Account Error: Password Must Contain One Number\");\n    }else if(!this.phoneCheck(this.state.phone_number)){\n      this.toastMessage(\"Create Account Error: Phone Number Must Be At Least 9 Numbers Long\");\n    }else if(!this.emailCheck(this.state.email)){\n      this.toastMessage(\"Create Account Error: Email must be in the correct format 'Example@Example.Example'\");\n    }\n    else{\n      this.submit();\n    }\n\n  };\n\n  toastMessage = (message) => {\n    this.toast.current.openToast(message);\n  };\n\n    render(){\n    return (\n      <div class=\"createacct-title\">\n        { this.state.loading ?\n      <div className=\"loading-container-sign\"> <div className=\"form-load-symbol-sign\"/></div>\n      : null }\n      <div class=\"createacct-inventor-title\">\n      <h2>InventorME</h2>\n      </div>\n\n      <Link to=\"/signin-page\" style={{ textDecoration: 'none' }}>\n          <img src={BackButton} class=\"backwards\" alt=\"back\" />\n      </Link> \n      <ToastMessage ref={this.toast}/>\n\n    <p className =\"Email2\"> Email: </p>\n    <input type=\"text\"  input class = \"email2\" value={this.state.email} onChange={this.setEmail}/>\n\n    <p className = \"Fname\"> First Name: </p>\n    <input type=\"text\"  input class = \"first\" value={this.state.name} onChange={this.setName}/>\n\n    <p className = \"Lname\"> Last Name: </p>\n    <input type=\"text\"  input class = \"last\" value={this.state.family_name} onChange={this.setFamilyName}/>\n\n    <p className = \"Phone\"> Phone Number: </p>\n    <input type = \"text\" input class = \"phone\" value={this.state.phone_number} onChange={this.setPhone}/>\n\n    <p className = \"Password2\"> Password: </p>\n    <input type=\"password\"  input class = \"password2\" value={this.state.password} onChange={this.setPassword}/>\n\n    <button className=\"goto-account\" onClick={this.validateUser}>Create Account </button>\n    <img src={InventorLogo} class=\"calogo\" alt=\"\" />\n\n</div>     \n    \n      );\n    }\n}\nexport default CreateAcctPage;","/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/profilePage/ProfilePage.js",["63"],"import React, { Component } from 'react';\nimport './ProfilePage.css';\nimport ReactRoundedImage from \"react-rounded-image\"\nimport UploadButton from '../../images/upload-button.png'\nimport PhoneInput from 'react-phone-input-2'\nimport ToastMessage from '../../components/toastMessage/ToastMessage';\nimport { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\nimport { AccountContext } from '../../util/Accounts';\nimport BackButton from '../../images/back-button.png'\nimport { Link } from \"react-router-dom\";\n\nclass ProfilePage extends Component {\n  static contextType = AccountContext\n  constructor(props) {\n    super(props);\n    this.state = { loading: false, profile: true,\n      userID: null,\n      firstName: '',\n      lastName: '',\n      userEmail: '',\n      userProfilePic: '',\n      userPhone: ''\n    }\n    this.toggleForm = this.toggleForm.bind(this);\n    this.saveProfile = this.saveProfile.bind(this);\n    this.validateUser = this.validateUser.bind(this);\n    this.hiddenFileInput = React.createRef();\n    this.toast = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    const { getSession } = this.context;\n    getSession()\n      .then((data) => { \n        this.setState({ response: data.user })\n        this.setState({ firstName: data.name })\n        this.setState({ lastName: data.family_name })\n        this.setState({ userEmail: data.email })\n        this.setState({ userPhone: data.phone_number })\n        // this.setState({ userProfilePic: res.userProfilePicURL }) \n        this.setState({ loading: false });       \n      })\n      .catch(err =>{\n        console.log(err);\n        this.toastMessage(\"Error: No user found, please sign in again\");\n    });\n  }\n  \n  formatPhoneNumber(phoneNumberString) {\n    var cleaned = ('' + phoneNumberString).replace(/\\D/g, '')\n    var match = cleaned.match(/^(1|)?(\\d{3})(\\d{3})(\\d{4})$/)\n    if (match) {\n      var intlCode = (match[1] ? '+1 ' : '')\n      return [intlCode, '(', match[2], ') ', match[3], '-', match[4]].join('')\n    }\n    return null\n  }\n\n  toggleForm() {\n    this.setState({ profile: !this.state.profile });\n  }\n\n  firstNameOnChange = (event) => {\n    this.setState({firstName: event.target.value});\n  }\n\n  lastNameOnChange = (event) => {\n    this.setState({lastName: event.target.value});\n  }\n\n  phoneOnChange = (event) => {\n    this.setState({userPhone: \"+\" + event});\n  }\n\n  onImageChange = async(event) => {\n    if (event.target.files && event.target.files[0]) { \n      this.setState({userProfilePic: URL.createObjectURL(event.target.files[0])});    \n    }\n  }\n\n  upperCheck(str){\n    if(str.toLowerCase() === str){\n      return false;\n    }\n    return true;\n  }\n\n  lowerCheck(str){\n    if(str.toUpperCase() === str){\n      return false;\n    }\n    return true;\n  }\n\n  alphCheck(str){\n    var regex = /[a-zA-Z]/g;\n    return regex.test(str);\n  }\n\n  numCheck(str){\n    var regex = /\\d/g;\n    return regex.test(str);\n  }\n\n  phoneCheck(num){\n    var regex = /^(\\+1\\d{3}\\d{3}\\d{4}$)/g\n    return regex.test(num);\n  }\n\n  emailCheck(str){\n    var regex = /^[a-zA-Z]+[0-9_.+-]*@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/g\n    return regex.test(str);\n  }\n\n  validateUser(){\n    if(this.state.firstName === \"\"){\n      this.toastMessage(\"Error: Please Type First Name\");\n    } else if(this.state.lastName === \"\"){\n      this.toastMessage(\"Error: Please Type Last Name\");\n    } else if(!this.phoneCheck(this.state.userPhone)){\n      this.toastMessage(\"Error: Please Type A Valid Phone Number\");\n    }\n    else{\n      return true;\n    }\n    return false;\n  };\n  \n\n  setToastStyle(style) {\n    this.setState({ toastStyle: style });\n    clearInterval(this.start);\n  }\n\n  closeToast = () => {\n    this.start = setInterval(() => {\n      const toastStyle = { width : '0%', height: '12%' };\n      this.setToastStyle(toastStyle);\n    }, 3000); \n  }\n\n  reloadPage = () => {\n    setInterval(() => {\n      window.location.reload(true)\n    }, 2000); \n  }\n\n  saveProfile=(event) => {\n    const { getSession } = this.context;\n    let phone = \"+\" + this.state.userPhone;\n    this.setState({userPhone: phone});\n    if(!this.validateUser()){   \n      event.preventDefault();\n    } else {\n      this.setState({ loading: true });\n      event.preventDefault();\n        getSession().then(({ user }) => {\n          const attributes = [];\n          attributes.push(new CognitoUserAttribute({\n            Name: 'name',\n            Value: this.state.firstName\n          }));\n          attributes.push(new CognitoUserAttribute({\n            Name: 'phone_number',\n            Value: this.state.userPhone\n          }));\n          attributes.push(new CognitoUserAttribute({\n            Name: 'family_name',\n            Value: this.state.lastName\n          }));\n    \n          user.updateAttributes(attributes, (err, result) => {\n            if (err) {\n              console.error(err);\n              this.setState({ loading: false });\n              this.toastMessage('Error: Failed to save profile.');\n            } else {\n              this.toastMessage('Saved Successfully! ㋡');\n              this.reloadPage();\n            }\n          });\n        });\n      \n    }\n  }\n  \n  toastMessage = (message) => {\n    this.toast.current.openToast(message);\n  };\n\n  handleClick = () => {\n    this.hiddenFileInput.current.click();\n  };\n\nrender() {\n    return (\n      <div>\n        { this.state.loading ?\n        <div class=\"load-container\"> <div class=\"load-symbol\"/></div>\n        : null }\n        <div class=\"profile-banner\">\n        <Link to=\"/items-page\" style={{ textDecoration: 'none' }}>\n          <img src={BackButton} class=\"profile-back\" alt=\"back\" />\n        </Link> \n        <h2>InventorME</h2>   \n      </div>\n      <div className=\"profile-container\">\n        <ToastMessage ref={this.toast}/>\n          { this.state.profile ?\n            <div>\n              <div style={{display: 'block', width: '100%', height: '20%'}}>\n                <div class=\"profile-image-container\">\n                <ReactRoundedImage \n                roundedColor=\"#66A5CC\"\n                imageWidth=\"170\"\n                imageHeight=\"160\"\n                roundedSize=\"1\"\n                image={this.state.userProfilePic} />\n                </div>\n                <h1 class=\"profile-name\" style={{display: 'inline-flex'}}>\n                  <div style={{paddingRight: '1em'}}>{this.state.firstName}</div> \n                  <div>{this.state.lastName}</div>\n                </h1>\n              </div>\n              \n              <div style={{display: 'inline-flex', marginTop: '2%', width: '100%', height: '25%'}}>\n                <div class =\"edit-email-input\">\n                  <h3 class =\"edit-email\"> Email: </h3>\n                  <p class=\"user-email-value\">{this.state.userEmail}</p>\n                </div>\n                <div class = \"edit-phone-input\">\n                  <h3 class = \"edit-phone\"> Phone Number: </h3>\n                  <p class=\"phone-number-value\">{this.formatPhoneNumber(this.state.userPhone)}</p>\n                </div>\n              </div>\n\n              <button class=\"update-profile\" onClick={() => this.toggleForm()}>UPDATE PROFILE</button>\n            </div>\n            : \n          <form style={{height: '100vh'}}>\n            <div style={{display: 'inline-flex', width: '100%', height: '20%'}}>\n              <div class=\"profile-image-container\">\n              <input type=\"file\" ref={this.hiddenFileInput} onChange={this.onImageChange} style={{display: 'none'}}/>\n                <ReactRoundedImage \n                roundedColor=\"#66A5CC\"\n                imageWidth=\"170\"\n                imageHeight=\"160\"\n                roundedSize=\"1\"\n                image={this.state.userProfilePic} />\n              <img onClick={this.handleClick} src={UploadButton} className=\"file-upload\" alt=\"\"/>\n              </div>\n            </div>\n\n            <div style={{display: 'inline-flex', width: '100%', height: '20%', marginLeft: '31%', paddingTop: '2em'}}>\n              <div class=\"edit-first-input\">\n              <p class=\"edit-first\"> First Name: </p>\n              <input class=\"first-input\" type=\"text\" onChange={this.firstNameOnChange} value={this.state.firstName} />\n              </div>\n              <div class=\"edit-last-input\">\n              <p class=\"edit-last\"> Last Name: </p>  \n              <input type=\"text\" class=\"last-input\" value={this.state.lastName} onChange={this.lastNameOnChange}/>\n              </div>\n            </div>\n            \n            <div style={{display: 'inline-flex', width: '100%', height: '22%'}}>\n              <div class = \"edit-phone-input2\">\n              <p class = \"edit-phone\"> Phone Number: </p>\n              <PhoneInput country='us' countryCodeEditable={false} withCountryCallingCode={true} class=\"phone-input\"  value={this.state.userPhone} onChange={this.phoneOnChange}/>\n              </div>\n            </div>\n            \n            {/* <p class = \"Password2\"> Password: </p>\n            <input type=\"password\"  input class = \"password2\" onChange={this.handleChange}/> */}\n            <div style={{display: 'inline-flex', width: '100%', height: '5%'}}>\n              <button type='submit' class=\"save-profile\" onClick={this.saveProfile}>SAVE</button>\n              <button class=\"cancel-profile\" onClick={() => window.location.reload(true)}>CANCEL</button>\n            </div>\n          </form> \n            }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProfilePage;","/Users/lukemiller/Developer/Capstone/inventor-me/src/signinPage/SignInPage.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/NavBanner.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/util/Accounts.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/aboutPage/AboutPage.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/itemsPage/ItemsPage.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/navigationBanner/collections/Collections.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/util/UserPool.js",[],"/Users/lukemiller/Developer/Capstone/inventor-me/src/components/toastMessage/ToastMessage.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":23},{"ruleId":"68","severity":1,"message":"72","line":4,"column":25,"nodeType":"70","messageId":"71","endLine":4,"endColumn":30},{"ruleId":"68","severity":1,"message":"73","line":4,"column":32,"nodeType":"70","messageId":"71","endLine":4,"endColumn":38},{"ruleId":"68","severity":1,"message":"74","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":18},{"ruleId":"68","severity":1,"message":"75","line":120,"column":13,"nodeType":"70","messageId":"71","endLine":120,"endColumn":20},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'ProfileBox' is defined but never used.","'reqBody' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]