[{"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\index.js":"1","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\App.js":"2","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\reportWebVitals.js":"3","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\createacctPage\\CreateAcctPage.js":"4","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\signinPage\\SignInPage.js":"5","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\profilePage\\ProfilePage.js":"6","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\NavBanner.js":"7","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\itemsPage\\ItemsPage.js":"8","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\aboutPage\\AboutPage.js":"9","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\Accounts.js":"10","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\collections\\Collections.js":"11","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\UserPool.js":"12","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\archivepage\\ArchivePage.js":"13","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\Table.js":"14","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\formPage\\FormPage.js":"15","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\toastMessage\\ToastMessage.js":"16","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\ItemsTable.js":"17"},{"size":1609,"mtime":1616796079177,"results":"18","hashOfConfig":"19"},{"size":242,"mtime":1616796138333,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1612304423312,"results":"21","hashOfConfig":"19"},{"size":5898,"mtime":1616796138338,"results":"22","hashOfConfig":"19"},{"size":3295,"mtime":1616796138348,"results":"23","hashOfConfig":"19"},{"size":9703,"mtime":1616796138346,"results":"24","hashOfConfig":"19"},{"size":5779,"mtime":1616875470892,"results":"25","hashOfConfig":"19"},{"size":434,"mtime":1616797788908,"results":"26","hashOfConfig":"19"},{"size":793,"mtime":1616796138340,"results":"27","hashOfConfig":"19"},{"size":3107,"mtime":1616796138349,"results":"28","hashOfConfig":"19"},{"size":343,"mtime":1616948595518,"results":"29","hashOfConfig":"19"},{"size":216,"mtime":1615848571754,"results":"30","hashOfConfig":"19"},{"size":425,"mtime":1616796079194,"results":"31","hashOfConfig":"19"},{"size":2134,"mtime":1616798255608,"results":"32","hashOfConfig":"19"},{"size":10946,"mtime":1616796138335,"results":"33","hashOfConfig":"19"},{"size":979,"mtime":1616796138337,"results":"34","hashOfConfig":"19"},{"size":2116,"mtime":1616798255642,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ltdj4q",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\index.js",[],["75","76"],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\App.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\reportWebVitals.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\createacctPage\\CreateAcctPage.js",["77","78","79","80"],"import React, { Component } from 'react';\r\nimport './CreateAcctPage.css';\r\nimport InventorLogo from '../images/InventorMeLogo.png';\r\nimport { BrowserRouter, Route, Switch ,Link} from \"react-router-dom\";\r\nimport ProfileBox from '../images/profile-box.png'\r\nimport BackButton from '../images/back-button.png'\r\n\r\nclass CreateAcctPage extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: '', post: '' }\r\n  }\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res }))\r\n      .catch(err => console.log(err));\r\n  }\r\n  \r\n  callApi = async () => {\r\n    const response = await fetch('/api/profile');\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n    return body;\r\n  };\r\n\r\n    render(){\r\n    return (\r\n      <div class=\"createacct-title\">\r\n\r\n      <div class=\"createacct-inventor-title\">\r\n      <h2>InventorME</h2>\r\n      </div>\r\n\r\n      <Link to=\"/signin-page\" style={{ textDecoration: 'none' }}>\r\n          <img src={BackButton} class=\"backwards\" alt=\"back\" />\r\n        </Link> \r\n\r\n    <p class =\"Email2\"> Email: </p>\r\n    <input type=\"text\"  input class = \"email2\" onChange={this.handleChange}/>\r\n\r\n    <p class = \"Fname\"> First Name: </p>\r\n    <input type=\"text\"  input class = \"first\" onChange={this.handleChange}/>\r\n\r\n    <p class = \"Lname\"> Last Name: </p>\r\n    <input type=\"text\"  input class = \"last\" onChange={this.handleChange}/>\r\n\r\n    <p class = \"Phone\"> Phone Number: </p>\r\n    <input type = \"text\" input class = \"phone\" value={this.state.value} onChange={this.handleChange}/>\r\n\r\n    <p class = \"Password2\"> Password: </p>\r\n    <input type=\"password\"  input class = \"password2\" onChange={this.handleChange}/>\r\n\r\n    <button class=\"goto-account\" onClick={event =>  window.location.href=\"/signin-page\"}>Create Account </button>\r\n    <img src={InventorLogo} class=\"calogo\" alt=\"\" />\r\n\r\n</div>\r\n      \r\n      \r\n      \r\n      \r\n\r\n  \r\n        \r\n    \r\n      );\r\n    }\r\n}\r\nexport default CreateAcctPage;","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\signinPage\\SignInPage.js",["81","82","83"],"import React, { Component } from 'react';\r\nimport './SignInPage.css';\r\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\r\nimport ProfileBox from '../images/profile-box.png';\r\n\r\nclass SignInPage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { response: '', post: '' }\r\n      }\r\n      componentDidMount() {\r\n        this.callApi()\r\n          .then(res => this.setState({ response: res }))\r\n          .catch(err => console.log(err));\r\n      }\r\n      \r\n      callApi = async () => {\r\n        const response = await fetch('/api/profile');\r\n        const body = await response.json();\r\n        if (response.status !== 200) throw Error(body.message);\r\n        return body;\r\n      };\r\n    \r\n\r\n   render(){\r\n       return(\r\n    <div class=\"signin-title\">\r\n    <div class=\"signin-inventor-title\">\r\n    <h2>InventorME</h2>\r\n    </div>\r\n\r\n    <div  class=\"login-box\">\r\n    <img class = \"lbox\"img style = {this.state.style} src={ProfileBox} alt=\"\"/>\r\n    <p class =\"Password\"> Password: </p>\r\n    <input type=\"password\"  input class = \"password\" value={this.state.value} onChange={this.handleChange}/>\r\n    <p class =\"Email\"> Email: </p>\r\n    <input type=\"text\"  input class = \"email\" value={this.state.value} onChange={this.handleChange}/>\r\n        <button class=\"login-account\" onClick={event =>  window.location.href=\"/accounts-page\"}>Log in</button>\r\n        <p class =\"or-message\"> Don't have an account?</p>\r\n        <button class=\"create-account\" onClick={event =>  window.location.href=\"/createacct-page\"}>Create an Account </button>\r\n      </div>\r\n      </div>\r\n\r\n\r\n    \r\n      \r\n       );\r\n  }\r\n}\r\n    \r\n   \r\n    \r\nexport default SignInPage;","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\profilePage\\ProfilePage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\NavBanner.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\itemsPage\\ItemsPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\aboutPage\\AboutPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\Accounts.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\collections\\Collections.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\util\\UserPool.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\archivepage\\ArchivePage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\Table.js",["84","85"],"import React, { Component } from 'react';\r\nimport archived from '../images/archived.png'\r\n\r\nimport './Table.css'\r\n\r\n\r\n\r\nclass Table extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \r\n    \r\n            Archived_Items:[\r\n                {Name:\"Inventory\", Collections: \"Electronics\", Notes: \"Los Angeles\",Archived:<img src={archived} width=\"40\" height=\"20\"/>  },\r\n                {Name:\"InventorME\",  Collections: \"Internet\", Notes: \"New York City\", Archived:<img src={archived} width=\"40\" height=\"20\"/> }\r\n            ]\r\n        }\r\n    }\r\n    renderTableData(){\r\n    \r\n        return this.state.Archived_Items.map((Archived_Item,index) => {\r\n            \r\n            const {Name,Collections,Notes,Archived} = Archived_Item\r\n            return(\r\n                <tr key = {Name}>\r\n                <td>{Name}</td> \r\n                <td>{Collections}</td>\r\n                <td>{Notes}</td>\r\n                <td>{Archived}</td>   \r\n                </tr>\r\n            )\r\n        })\r\n    \r\n    }\r\n    \r\n    getJSON = function(url,callback){\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET',url,true);\r\n        xhr.responseType = 'json';\r\n        xhr.oonload = function(){\r\n            var status = xhr.status;\r\n            if(status === 200){\r\n                callback(null,xhr.response);\r\n            }else{\r\n                callback(status,xhr.response)\r\n            }\r\n        };\r\n        xhr.send();\r\n    };\r\n    \r\n    renderTableHeader(){\r\n        let header = Object.keys(this.state.Archived_Items[0])\r\n        return header.map((key,index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n    render() {\r\n      \r\n        return (\r\n        <div>\r\n                <h1 id = 'title'>Archived Items</h1>\r\n                <table id= 'Archived_Items'>\r\n                <tbody>\r\n                <tr>{this.renderTableHeader()}</tr>\r\n                {this.renderTableData()}\r\n            \r\n                </tbody>\r\n                </table>\r\n               \r\n                </div>\r\n        )\r\n    }\r\n}\r\n    export default Table;","C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\formPage\\FormPage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\components\\toastMessage\\ToastMessage.js",[],"C:\\Users\\floyd\\OneDrive\\Documents\\GitHub\\inventor-me\\src\\navigationBanner\\ItemsTable.js",["86","87"],"import React, { Component } from 'react';\r\nimport upload from '../images/upload-button.png'\r\n\r\nimport './ItemsTable.css'\r\n\r\n\r\n\r\nclass ItemsTable extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \r\n    \r\n            Current_Items:[\r\n                {Name:\"Inventory\", Collections: \"Hardware\", Notes: \"Apple\",Image:<img src={upload} width=\"40\" height=\"30\"/>  },\r\n                {Name:\"InventorME\",  Collections: \"Software\", Notes: \"Microsoft\", Image:<img src={upload} width=\"40\" height=\"30\"/> }\r\n            ]\r\n        }\r\n    }\r\n    renderTableData(){\r\n    \r\n        return this.state.Current_Items.map((Current_Item,index) => {\r\n            \r\n            const {Name,Collections,Notes,Image} = Current_Item\r\n            return(\r\n                <tr key = {Name}>\r\n                <td>{Name}</td> \r\n                <td>{Collections}</td>\r\n                <td>{Notes}</td>\r\n                <td>{Image}</td>   \r\n                </tr>\r\n            )\r\n        })\r\n    \r\n    }\r\n    \r\n    getJSON = function(url,callback){\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET',url,true);\r\n        xhr.responseType = 'json';\r\n        xhr.oonload = function(){\r\n            var status = xhr.status;\r\n            if(status === 200){\r\n                callback(null,xhr.response);\r\n            }else{\r\n                callback(status,xhr.response)\r\n            }\r\n        };\r\n        xhr.send();\r\n    };\r\n    \r\n    renderTableHeader(){\r\n        let header = Object.keys(this.state.Current_Items[0])\r\n        return header.map((key,index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n    render() {\r\n      \r\n        return (\r\n        <div>\r\n                <h1 id = 'Title'>Current Items</h1>\r\n                <table id= 'Current_Items'>\r\n                <tbody>\r\n                <tr>{this.renderTableHeader()}</tr>\r\n                {this.renderTableData()}\r\n            \r\n                </tbody>\r\n                </table>\r\n               \r\n                </div>\r\n        )\r\n    }\r\n}\r\n    export default ItemsTable;",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":23},{"ruleId":"92","severity":1,"message":"96","line":4,"column":25,"nodeType":"94","messageId":"95","endLine":4,"endColumn":30},{"ruleId":"92","severity":1,"message":"97","line":4,"column":32,"nodeType":"94","messageId":"95","endLine":4,"endColumn":38},{"ruleId":"92","severity":1,"message":"98","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":18},{"ruleId":"92","severity":1,"message":"99","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"100","line":3,"column":16,"nodeType":"94","messageId":"95","endLine":3,"endColumn":26},{"ruleId":"92","severity":1,"message":"101","line":3,"column":28,"nodeType":"94","messageId":"95","endLine":3,"endColumn":38},{"ruleId":"102","severity":1,"message":"103","line":16,"column":94,"nodeType":"104","endLine":16,"endColumn":138},{"ruleId":"102","severity":1,"message":"103","line":17,"column":96,"nodeType":"104","endLine":17,"endColumn":140},{"ruleId":"102","severity":1,"message":"103","line":16,"column":79,"nodeType":"104","endLine":16,"endColumn":121},{"ruleId":"102","severity":1,"message":"103","line":17,"column":86,"nodeType":"104","endLine":17,"endColumn":128},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'ProfileBox' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]